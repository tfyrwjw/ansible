- name: 创建 admin.conf 配置文件
  shell: >
    kubectl config set-cluster kubernetes 
    --certificate-authority=/etc/kubernetes/pki/ca.crt 
    --embed-certs=true 
    --server=https://{{ KUBE_APISERVER_IP | trim }}:{{ lb_kube_apiserver_port | trim }} 
    --kubeconfig=/etc/kubernetes/admin.conf &&
    kubectl config set-credentials kubernetes-admin
    --client-certificate=/etc/kubernetes/pki/admin.crt
    --client-key=/etc/kubernetes/pki/admin.key 
    --embed-certs=true 
    --kubeconfig=/etc/kubernetes/admin.conf &&
    kubectl config set-context kubernetes-admin@kubernetes 
    --cluster=kubernetes 
    --user=kubernetes-admin
    --kubeconfig=/etc/kubernetes/admin.conf &&
    kubectl config use-context 
    kubernetes-admin@kubernetes 
    --kubeconfig=/etc/kubernetes/admin.conf

- name: 创建 kubelet.conf 配置文件
  shell: >
    kubectl config set-cluster kubernetes 
    --certificate-authority=/etc/kubernetes/pki/ca.crt 
    --embed-certs=true 
    --server=https://{{ KUBE_APISERVER_IP | trim }}:{{ lb_kube_apiserver_port | trim }} 
    --kubeconfig=/etc/kubernetes/kubelet.conf &&
    kubectl config set-credentials system:node:{{ inventory_hostname }} 
    --client-certificate=/etc/kubernetes/pki/kubelet.crt 
    --client-key=/etc/kubernetes/pki/kubelet.key 
    --embed-certs=true 
    --kubeconfig=/etc/kubernetes/kubelet.conf &&
    kubectl config set-context system:node:{{ inventory_hostname }}@kubernetes 
    --cluster=kubernetes --user=system:node:{{ inventory_hostname }} 
    --kubeconfig=/etc/kubernetes/kubelet.conf &&
    kubectl config use-context system:node:{{ inventory_hostname }}@kubernetes 
    --kubeconfig=/etc/kubernetes/kubelet.conf

- name: 创建 scheduler.conf 配置文件
  shell: >
    kubectl config set-cluster kubernetes 
    --certificate-authority=/etc/kubernetes/pki/ca.crt 
    --embed-certs=true 
    --server=https://{{ KUBE_APISERVER_IP | trim }}:{{ lb_kube_apiserver_port | trim }} 
    --kubeconfig=/etc/kubernetes/scheduler.conf &&
    kubectl config set-credentials system:kube-scheduler 
    --client-certificate=/etc/kubernetes/pki/kube-scheduler.crt
    --client-key=/etc/kubernetes/pki/kube-scheduler.key 
    --embed-certs=true 
    --kubeconfig=/etc/kubernetes/scheduler.conf &&
    kubectl config set-context system:kube-scheduler@kubernetes 
    --cluster=kubernetes 
    --user=system:kube-scheduler 
    --kubeconfig=/etc/kubernetes/scheduler.conf &&
    kubectl config use-context system:kube-scheduler@kubernetes 
    --kubeconfig=/etc/kubernetes/scheduler.conf

- name: 创建 controller-manager.conf 配置文件
  shell: >
    kubectl config set-cluster kubernetes 
    --certificate-authority=/etc/kubernetes/pki/ca.crt 
    --embed-certs=true 
    --server=https://{{ KUBE_APISERVER_IP | trim }}:{{ lb_kube_apiserver_port | trim }} 
    --kubeconfig=/etc/kubernetes/controller-manager.conf &&
    kubectl config set-credentials system:kube-controller-manager 
    --client-certificate=/etc/kubernetes/pki/kube-controller-manager.crt 
    --client-key=/etc/kubernetes/pki/sa.key 
    --embed-certs=true 
    --kubeconfig=/etc/kubernetes/controller-manager.conf &&
    kubectl config set-context system:kube-controller-manager@kubernetes 
    --cluster=kubernetes 
    --user=system:kube-controller-manager 
    --kubeconfig=/etc/kubernetes/controller-manager.conf &&
    kubectl config use-context system:kube-controller-manager@kubernetes 
    --kubeconfig=/etc/kubernetes/controller-manager.conf

- name: 创建 kubeconfig 目录
  file: 
    name: "{{ item }}"
    state: directory
  with_items:
  - "{{ ansible_env.PWD }}/.kube"
  - "{{ ansible_env.HOME }}/.kube"

- name: 复制 kubeconfig 文件到 .kube 目录
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ item }}/config"
    mode: 0644
    remote_src: yes
  with_items:
  - "{{ ansible_env.PWD }}/.kube"
  - "{{ ansible_env.HOME }}/.kube"